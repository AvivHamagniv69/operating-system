#########################################################################
# Copyright (C) 2001-2021  The Bochs Project
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
#########################################################################

.SUFFIXES: .cc

srcdir = .

top_builddir    = ..
top_srcdir      = ..

SHELL = /bin/sh



CC = cl
CFLAGS = /nologo /MT /W3 /DNDEBUG /DWIN32 /D_WINDOWS /D_CRT_SECURE_NO_WARNINGS /O2 /Gr /EHsc /std:c++20 
CXX = cl
CXXFLAGS = /nologo /MT /W3 /DNDEBUG /DWIN32 /D_WINDOWS /D_CRT_SECURE_NO_WARNINGS /O2 /Gr /EHsc /std:c++20 
CPPFLAGS =  -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES

LDFLAGS = 
LIBS = 
RANLIB = echo

# Definitely use flex.  Use flex version >= 2.5.4
# Flex version 2.5.2 was reported not to work
LEX    = flex
YACC   = yacc


# ===========================================================
# end of configurable options
# ===========================================================


BX_OBJS = \
  dbg_main.o \
  dbg_breakpoints.o \
  symbols.o \
  linux.o \

BX_PARSER_OBJS = \
  bx_parser.o \
  bx_lexer.o

BX_INCLUDES = debug.h

BX_INCDIRS = -I.. -I$(srcdir)/.. -I../instrument/stubs -I$(srcdir)/../instrument/stubs -I. -I$(srcdir)/.

all: libdebug.a

.cc.o:
	$(CXX) /c $(BX_INCDIRS) $(CPPFLAGS) $(CXXFLAGS) /Tp$< /Fo$@


.c.o:
	$(CC) /c $(BX_INCDIRS) $(CPPFLAGS) $(CFLAGS) /Tc$< /Fo$@



libdebug.a: $(BX_OBJS) $(BX_PARSER_OBJS)
	-del libdebug.a
	lib /nologo /subsystem:console /verbose /out:$@ $(BX_OBJS) $(BX_PARSER_OBJS)
	$(RANLIB) libdebug.a

$(BX_OBJS): $(BX_INCLUDES)


clean:
	-del *.o
	-del libdebug.a

dist-clean: clean
	-del Makefile

parse-clean:
	-del -f  bx_lexer.c
	-del -f  bx_parser.cc
	-del -f  bx_parser.h

dbg_main.o: debug.h

#bx_parser.cc: bx_parser.y
#	@/bin/rm -f y.tab.c bx_parser.cc
#	@/bin/rm -f y.tab.h bx_parser.h
#	$(YACC) -p bx -d $<
#	@/bin/mv -f y.tab.c bx_parser.cc
#	@/bin/mv -f y.tab.h bx_parser.h
#	@sed -i s/extern\ YYSTYPE/extern\ \"C\"\ YYSTYPE/ bx_parser.cc
#	@echo '#endif  /* if BX_DEBUGGER */' >> bx_parser.cc
#	@echo '/* The #endif is appended by the makefile after running yacc. */' >> bx_parser.cc

#bx_lexer.c: bx_lexer.l
#	$(LEX) -Pbx -t $< > bx_lexer.c

###########################################
# dependencies generated by
#  gcc -MM -I. -I.. -I../instrument/stubs *.c  *.cc | sed 's/\.cc/.cc/g'
###########################################
bx_lexer.o: bx_lexer.c debug.h ../config.h ../osdep.h ../cpu/decoder/decoder.h \
 ../cpu/decoder/features.h bx_parser.h
dbg_breakpoints.o: dbg_breakpoints.cc ../bochs.h ../config.h ../osdep.h \
 ../logio.h ../misc/bswap.h debug.h ../config.h ../osdep.h \
 ../cpu/decoder/decoder.h ../cpu/decoder/features.h
dbg_main.o: dbg_main.cc ../bochs.h ../config.h ../osdep.h ../logio.h \
 ../misc/bswap.h ../param_names.h ../cpu/cpu.h ../cpu/decoder/decoder.h \
 ../cpu/decoder/features.h ../instrument/stubs/instrument.h ../cpu/i387.h \
 ../cpu/softfloat3e/include/softfloat_types.h ../config.h \
 ../cpu/fpu/tag_w.h ../cpu/fpu/status_w.h ../cpu/fpu/control_w.h \
 ../cpu/crregs.h ../cpu/descriptor.h ../cpu/decoder/instr.h \
 ../cpu/lazy_flags.h ../cpu/tlb.h ../cpu/icache.h ../cpu/xmm.h \
 ../cpu/vmx.h ../cpu/vmx_ctrls.h ../cpu/access.h \
 ../cpu/decoder/ia_opcodes.h ../cpu/decoder/ia_opcodes.def \
 ../cpu/decoder/ia_opcodes_evex.def ../iodev/iodev.h ../plugin.h \
 ../extplugin.h ../pc_system.h ../bx_debug/debug.h ../osdep.h \
 ../cpu/decoder/decoder.h ../memory/memory-bochs.h ../gui/siminterface.h \
 ../gui/paramtree.h ../gui/gui.h
linux.o: linux.cc ../bochs.h ../config.h ../osdep.h ../logio.h \
 ../misc/bswap.h debug.h ../config.h ../osdep.h ../cpu/decoder/decoder.h \
 ../cpu/decoder/features.h ../cpu/cpu.h ../cpu/decoder/decoder.h \
 ../instrument/stubs/instrument.h ../cpu/i387.h \
 ../cpu/softfloat3e/include/softfloat_types.h ../cpu/fpu/tag_w.h \
 ../cpu/fpu/status_w.h ../cpu/fpu/control_w.h ../cpu/crregs.h \
 ../cpu/descriptor.h ../cpu/decoder/instr.h ../cpu/lazy_flags.h \
 ../cpu/tlb.h ../cpu/icache.h ../cpu/xmm.h ../cpu/vmx.h \
 ../cpu/vmx_ctrls.h ../cpu/access.h syscalls-linux.h
bx_parser.o: bx_parser.cc debug.h ../config.h ../osdep.h \
 ../cpu/decoder/decoder.h ../cpu/decoder/features.h
symbols.o: symbols.cc ../bochs.h ../config.h ../osdep.h ../logio.h \
 ../misc/bswap.h debug.h ../config.h ../osdep.h ../cpu/decoder/decoder.h \
 ../cpu/decoder/features.h ../cpu/cpu.h ../cpu/decoder/decoder.h \
 ../instrument/stubs/instrument.h ../cpu/i387.h \
 ../cpu/softfloat3e/include/softfloat_types.h ../cpu/fpu/tag_w.h \
 ../cpu/fpu/status_w.h ../cpu/fpu/control_w.h ../cpu/crregs.h \
 ../cpu/descriptor.h ../cpu/decoder/instr.h ../cpu/lazy_flags.h \
 ../cpu/tlb.h ../cpu/icache.h ../cpu/xmm.h ../cpu/vmx.h \
 ../cpu/vmx_ctrls.h ../cpu/access.h
